"VertexlitGeneric"
{
	"$basetexture" "models\devinity\player_models\regular\blacklight_retribution\viper_01\viper_01"
	"$bumpmap" "models\devinity\player_models\regular\blacklight_retribution\viper_01\viper_01_normal"

	"$phong" 1
	"$phongboost" 0.05
	"$phongexponent" 2
	"$phongtint" "[1 .85 .85]"
	"$phongfresnelranges" "[.7 .95 2]"
	"$model" 1
	"$phongalbedotint" 1
	// thanks Splinks!
	"$detail" "models\devinity\player_models\regular\blacklight_retribution\viper_01\viper_01_glow"
       	"$detailscale" "1"
       	"$detailblendfactor" "1.25"
       	"$detailblendmode" "5"

	"$blendtintbybasealpha" "1" // alpha channel of $basetexture: color mask.
 	"$blendtintcoloroverbase" "0" // blend mode. anything =/= 0 is ugly!
	
	"$PhongBrightnessScalar" "0.5" // see below. "0.5" will get overwritten.
	
	Proxies
	{
		PlayerColor
		{
			resultVar	$color2 // pass the player color value to Gmod
			default		0.23 0.35 0.41 // unused for now.
		}
		Clamp // clamp the chosen color between 1% and 125% (usually)
		{
			min 0.08
			max 1.25
			srcVar1 "$color2"
			resultVar "$color2"
		}
		Clamp // copy this value to phong tint, clamp it to 50% min.
		{
			min 0.5
			max 1.0
			srcVar1 "$color2"
			resultVar "$phongtint"
		}
		Equals // copy $color2 value to exterior variable. this makes it
		{      // no longer a RGB array but a single float instead (!??)
			srcVar1 "$color2"
			resultVar "$PhongBrightnessScalar"
		}
		Multiply // multiply $phongtint by this new float value.
		{
			srcVar1 "$phongtint"
			srcVar2 "$phongBrightnessScalar"
			resultVar "$phongtint"
		}
		Clamp // the result of this multiply doesn't go any lower than 20%
		{
			min 0.25
			max 1.00
			srcVar1 "$phongtint"
			resultVar "$phongtint"
		}
	}
}


